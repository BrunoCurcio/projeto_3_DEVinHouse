package main;

import java.util.Scanner;

import entities.Archer;
import entities.Knight;
import entities.Mage;
import entities.Motivations;
import entities.OrcAlchemist;
import entities.OrcArmorer;
import entities.OrcLeader;
import entities.CombatClass;
import entities.Enemy;
import entities.Gender;
import entities.Trap;
import entities.Warrior;
import entities.Weapons;

public class FinalBattle {

	public static void main(String[] args) {
		
		Scanner in = new Scanner(System.in);
		int option = 0;
		String difficultyLevel = null;
		String characterName = null;
		Gender characterGender = null;
		CombatClass player = null;
		
		int flagDif = 0;
			
		while(flagDif == 0) {
			
			try {
				
				System.out.println("Seja bem vindo(a) à BATALHA FINAL!");
				System.out.println("Escolha o nível de dificuldade:");
				System.out.println("1 - Fácil,");
				System.out.println("2 - Normal,");
				System.out.println("3 - Difícil,");
				
				option = chooseOption(3, in);
				
				switch(option) {
					case 1: {
						difficultyLevel = "Easy";
						System.out.println("Modo fácil: Os inimigos causarão 20% a menos de dano!");
						flagDif = 1;
						break;
					}
					case 2: {
						difficultyLevel = "Normal";
						System.out.println("Modo normal: O dano será calculado normalmente!");
						flagDif = 1;
						break;
					}
					case 3: {
						difficultyLevel = "Hard";
						System.out.println("Modo difícil: Você causará 10% a menos de dano!");
						flagDif = 1;
						break;
					}
				}
				} catch (Exception exception) {
					System.err.println("Digite apenas 1, 2 ou 3");
				}
		}
			
		int flagName = 0;
		
		while(flagName == 0) {
			System.out.println("Digite o nome do seu personagem:");
			characterName = in.nextLine();
			if (characterName.isBlank() || characterName.isEmpty()) {
				System.err.println("O nome não pode ser deixado em branco!");
			} else {
				flagName = 1;
			}		
		}
			
		int flagGender = 0;
		
		while(flagGender == 0) {
			try {
				
				System.out.println("Digite o gênero do seu personagem: 1 - Masculino ou 2 - Feminino");
				option = chooseOption(2, in);
				
				switch(option) {
					case 1: {
						characterGender = Gender.MALE;
						flagGender = 1;
						break;	
					}
					case 2: {
						characterGender = Gender.FEMALE;
						flagGender = 1;
						break;
					}
				}
				
			}catch (Exception exception) {
				System.err.println("Digite apenas 1 ou 2");
			}	
		}
			
		int flagClass = 0;
		
		while(flagClass == 0) {
			
			try {
				System.out.println("Selecione a classe do seu personagem:");
				System.out.println("1 - Warrior,");
				System.out.println("2 - Knight,");
				System.out.println("3 - Archer,");
				System.out.println("4 - Mage");
		
				option = chooseOption(4, in);
				
				switch (option) {
				case 1: {
					System.out.println("Classe de combate: Guerreiro(a)");
					break;
					}
				case 2: {
					System.out.println("Classe de combate: Cavaleiro(a)");
					break;
					}
				case 3: {
					System.out.println("Classe de combate: Arqueiro(a)");
					break;
					}
				case 4: {
					System.out.println("Classe de combate: Mago(a)");
					break;
					}
				} 
				flagClass = 1;
				}catch(Exception exception) {
					System.err.println("Para escolher a classe digite apenas números de 1 a 4");
			}
				
			int flagWeapon = 0;
			
			while(flagWeapon == 0) {
				
				try {
				System.out.println("Escolha a sua arma: ");
				switch (option) {
				case 1:
					System.out.println("1 - " + Weapons.HAMMER.getName());
					System.out.println("2 - " + Weapons.AXE.getName());
					break;
				case 2:
					System.out.println("1 - " + Weapons.SWORD.getName());
					System.out.println("2 - " + Weapons.CLUB.getName());
					break;
				case 3:
					System.out.println("1 - " + Weapons.BOW_AND_ARROW.getName());
					System.out.println("2 - " + Weapons.CROSSBOW.getName());
					break;
				case 4:
					System.out.println("1 - " + Weapons.STAFF.getName());
					System.out.println("2 - " + Weapons.GRIMOIRE.getName());
					break;
				}

				int weaponOption = chooseOption(2, in);
		
				Weapons chosenWeapon;
				switch (option) {
				case 1:
					chosenWeapon = weaponOption == 1 ? Weapons.HAMMER : Weapons.AXE;
					player = new Warrior(characterName, characterGender, chosenWeapon);
					break;
				case 2:
					chosenWeapon = weaponOption == 1 ? Weapons.SWORD : Weapons.CLUB;
					player = new Knight(characterName, characterGender, chosenWeapon);
					break;
				case 3:
					chosenWeapon = weaponOption == 1 ? Weapons.BOW_AND_ARROW : Weapons.CROSSBOW;
					player = new Archer(characterName, characterGender, chosenWeapon);
					break;
				case 4:
					chosenWeapon = weaponOption == 1 ? Weapons.STAFF : Weapons.GRIMOIRE;
					player = new Mage(characterName, characterGender, chosenWeapon);
					break;
				}
				flagWeapon = 1;
			} catch (Exception exception) {
				System.err.println("Para escolher a arma digite apenas 1 ou 2.");
			}			
		}
	
	
		System.out.println("A noite se aproxima, a lua já surge no céu, estrelas vão se acendendo,\n"
				+ "e sob a luz do crepúsculo você está prestes a entrar na fase final da sua missão.\n"
				+ "Você olha para o portal à sua frente, e sabe que a partir desse ponto, sua vida mudará para sempre.");
		
		System.out.println("Memórias do caminho percorrido para chegar até aqui invadem sua mente.\n"
				+ "Você se lembra de todos os inimigos já derrotados para alcançar o covil do líder maligno.\n"
				+ "Olha para seu equipamento de combate, já danificado e desgastado depois de tantas lutas.\n"
				+ "Você está a um passo de encerrar para sempre esse mal.");
		
		System.out.println("Buscando uma injeção de ânimo, você se força a lembrar o que te trouxe até aqui.");
		
		System.out.println("Escolha uma motivação para a sua jornada: ");
		System.out.println("1 - Vingança");
		System.out.println("2 - Glória");
		
		option = decision(2, in);
		
		if (option == 1) {
			player.setMotivation(Motivations.VENGEANCE);
		} else if (option == 2) {
			player.setMotivation(Motivations.GLORY);
		} else {
			System.err.println("Digite apenas 1 ou 2");
		}
	
		if (player.getMotivation() == Motivations.VENGEANCE) {
			System.out.println("Imagens daquela noite trágica invadem sua mente.\n"
					+ "Você nem precisa se esforçar para lembrar, pois essas memórias estão sempre presentes,\n"
					+ "mesmo que de pano de fundo, quando você tem outros pensamentos em foco, elas nunca o deixaram.\n"
					+ "Elas são o combustível que te fizeram chegar até aqui.\n"
					+ "E você sabe que não irá desistir até ter vingado a morte\n"
					+ "daqueles que foram - e pra sempre serão - sua fonte de amor e desejo de continuar vivo.\n"
					+ "O maldito líder finalmente pagará por tanto mal causado na vida de tantos\n"
					+ "(e principalmente na sua).");
		} else {
			System.out.println(
					"Você já consegue visualizar na sua mente o povo da cidade te recebendo de braços abertos,\n"
							+ "bardos criando canções sobre seus feitos heróicos, nobres te presenteando com jóias e diversas riquezas,\n"
							+ "taberneiros se recusando a cobrar por suas bebedeiras e comilanças.\n"
							+ "Desde já, você sente o amor do público, te louvando a cada passo que dá pelas ruas,\n"
							+ "depois de destruir o vilão que tanto assombrou a paz de todos.\n"
							+ "Porém, você sabe que ainda falta o último ato dessa história.\n"
							+ "Você se concentra na missão.\n"
							+ "A glória o aguarda, mas não antes da última batalha.");
		}

		System.out.println("Inspirado pelo motivo que te trouxe até aqui, você sente seu coração ardendo em chamas,\n"
				+ "suas mãos formigarem em volta da sua arma. Você a segura com firmeza. Seu foco está renovado.\n"
				+ "Você avança pelo portal.");

		System.out.println("A escuridão te envolve. Uma iluminação muito fraca entra pelo portal às suas costas.\n"
				+ "À sua frente, só é possível perceber que você se encontra em um corredor extenso.\n"
				+ "Você só pode ir à frente, ou desistir.");
		
		
		System.out.println("O que você faz?");
		System.out.println("1 - Segue em frente");
		System.out.println("2 - Desiste");
		//System.out.println("3 - Acessar inventário");
		
		option = decision(2, in);

		if (option == 2) {
			System.out.println("O medo invade o seu coração e você sente que ainda não está à altura do desafio.\n"
					+ "Você se volta para a noite lá fora, e corre em direção à segurança.");
			System.exit(0);
		} 
//		else if (option == 3) {
//			System.out.println("Seu inventário contém um(a) " + player.getWeapon().getName());
//		}
		
		System.out.println("Você caminha, atento a todos os seus sentidos, por vários metros,\n"
					+ "até visualizar a frente uma fonte de luz, que você imagina ser a chama de uma tocha,\n"
					+ "vindo de dentro de uma porta aberta.");
		
		System.out.println("Você se pergunta se dentro dessa sala pode haver inimigos, ou alguma armadilha,\n"
				+ "e pondera sobre como passar pela porta.");
		System.out.println("Como você decide passar pela porta?");
		System.out.println("1 - Andando cuidadosamente");
		System.out.println("2 - Correndo");
		System.out.println("3 - Saltando");

		option = decision(3, in);
		if (option == 1) {
			System.out.println("Você toma cuidado e vai caminhando vagarosamente em direção à luz.\n"
					+ "Quando você pisa exatamente embaixo da porta, você sente o chão ceder levemente, como se tivesse pisado em uma pedra solta.\n"
					+ "Você ouve um ruído de mecanismos se movimentando, e uma escotilha se abre no teto atrás de você, no corredor.\n"
					+ "Flechas voam da escotilha em sua direção, e você salta para dentro da sala, porém uma delas te acerta na perna.");
			Trap trap = new Trap();
			trap.rollToAttack(player, difficultyLevel);

		} else if (option == 2) {

			System.out.println("Você respira fundo e desata a correr em direção à sala.\n"
					+ "Quando passa pela porta, sente que pisou em uma pedra solta,\n"
					+ "mas não dá muita importância e segue para dentro da sala, olhando ao redor à procura de inimigos.\n"
					+ "Não tem ninguém, mas você ouve sons de flechas batendo na pedra atrás de você,\n"
					+ "e quando se vira, vê várias flechas no chão.\n"
					+ "Espiando pela porta, você entende que pisou em uma armadilha que soltou flechas de uma escotilha aberta no teto,\n"
					+ "mas por sorte você entrou correndo e conseguiu escapar desse ataque surpresa.");
		} else {
			System.out.println(
					"Você se concentra e pula em direção à luz, saltando de antes da porta até o interior da sala.");
		}
		
		System.out.println("Você se encontra sozinho em uma sala quadrada, contendo uma porta em cada parede.\n"
				+ "Uma delas foi aquela pela qual você entrou, que estava aberta, e as outras três estão fechadas.\n"
				+ "A porta à sua frente é a maior das quatro, com inscrições em seu entorno em uma língua que você não sabe ler,\n"
				+ "mas reconhece como sendo a língua antiga utilizada pelo inimigo.\n"
				+ "Você se aproxima da porta e percebe que ela está trancada por duas fechaduras douradas,\n"
				+ "e você entende que precisará primeiro derrotar o que estiver nas outras duas portas laterais,\n"
				+ "antes de conseguir enfrentar o líder.");
		
		System.out.println("Você se dirige para a porta à direita.");
		
		System.out.println("Você se aproxima, tentando ouvir o que acontece porta adentro, mas não escuta nada.\n"
				+ "Segura com mais força sua arma com uma mão, enquanto empurra a porta com a outra.\n"
				+ "Ao entrar, você se depara com uma sala espaçosa,\n"
				+ "com vários equipamentos de batalha pendurados nas paredes e dispostos em armários e mesas.\n"
				+ "Você imagina que este seja o arsenal do inimigo, onde estão guardados os equipamentos que seus soldados\n"
				+ "utilizam quando saem para espalhar o terror nas cidades e vilas da região.\n"
				+ "Enquanto seu olhar percorre a sala, você ouve a porta se fechando e gira rapidamente para olhar para trás.\n"
				+ "Ali, de pé entre você e a porta fechada, bloqueando o caminho do seu destino, está um dos capitães do inimigo.\n"
				+ "Um orque horrendo, de armadura, capacete e espada em punho, em posição de combate.\n"
				+ "Ele avança em sua direção.");
		
		OrcArmorer armorer = new OrcArmorer();
		combat(player, armorer, false, in, difficultyLevel);
		
		System.out.println("Após derrotar o Armeiro, você percebe que seus equipamentos estão muito danificados.\n"
				+ "Olha em volta, encarando todas aquelas peças de armaduras resistentes e em ótimo estado.");
		
		System.out.println("Você deseja pegar e usar as armaduras do inimigo? 1- Sim, 2- Não");
		
		option = decision(2, in);
		if (option == 1) {
			System.out.println("Você resolve usar os equipamentos do inimigo contra ele, e trocar algumas peças suas,\n"
					+ "que estavam danificadas, pelas peças de armaduras existentes na sala.\n"
					+ "De armadura nova, você se sente mais protegido para os desafios à sua frente.");

			player.increaseDef(5);
		} else {
			System.out.println("Você decide que não precisa utilizar nada que venha das mãos do inimigo.");
		}
		
		System.out.println("Em uma mesa, você encontra uma chave dourada, e sabe que aquela chave abre uma das fechaduras da porta do líder inimigo.\n"
				+ "Você pega a chave e guarda numa pequena bolsa que leva presa ao cinto.");
		
		System.out.println("Você retorna à sala anterior e se dirige à porta da esquerda.\n"
				+ "Você se aproxima, tentando ouvir o que acontece porta adentro, mas não escuta nada.\n"
				+ "Segura com mais força sua arma com uma mão, enquanto empurra a porta com a outra.\n"
				+ "Ao entrar, você se depara com uma sala parecida com a do arsenal, mas em vez de armaduras,\n"
				+ "existem vários potes e garrafas de vidro com conteúdos misteriosos e de cores diversas,\n"
				+ "e você entende que o capitão que vive ali, realiza experimentos com diversos ingredientes,\n"
				+ "criando poções utilizadas pelos soldados para aterrorizar a região.");
		System.out.println("No fundo da sala, olhando em sua direção, está outro dos capitães do inimigo.\n"
				+ "Um orque horrendo, de armadura, cajado em punho, em posição de combate. Ele avança em sua direção.");

		OrcAlchemist alchemist = new OrcAlchemist();

		combat(player, alchemist, false, in, difficultyLevel);
		
		System.out.println("Após derrotar o Alquimista, você olha em volta, tentando reconhecer alguma poção do estoque do inimigo.\n"
				+ "Em uma mesa, você reconhece uma pequena garrafa de vidro contendo um líquido levemente rosado,\n"
				+ "pega a garrafa e pondera se deve beber um gole.");
		
		System.out.println("Você deseja beber da poção do inimigo? 1- Sim, 2- Não");
		
		option = decision(2, in);
		

		if (option == 1) {
			System.out.println("Você se sente revigorado para seguir adiante!");

			player.heal(CombatClass.MAX_HEALTH);
		} else {
			System.out.println("Você fica receoso de beber algo produzido pelo inimigo.");
		}
		
		System.out.println("Ao lado da porta, você vê uma chave dourada em cima de uma mesa,\n"
				+ "e sabe que aquela chave abre a outra fechadura da porta do líder inimigo.\n"
				+ "Você pega a chave e guarda na pequena bolsa que leva presa ao cinto.");
		
		System.out.println("De volta à sala das portas, você se dirige à porta final.\n"
				+ "Coloca as chaves nas fechaduras, e a porta se abre.\n"
				+ "Seu coração acelera, memórias de toda a sua vida passam pela sua mente,\n"
				+ "e você percebe que está muito próximo do seu objetivo final.\n"
				+ "Segura sua arma com mais firmeza, foca no combate que você sabe que irá se seguir, e adentra a porta.");
		
		System.out.println("Lá dentro, você vê o líder sentado em uma poltrona dourada, com duas fogueiras de cada lado, e prisioneiros acorrentados às paredes.");
		
		System.out.println("Ele percebe sua chegada e se levanta com um salto, apanhando seu machado de guerra de lâmina dupla.");
		
		System.out.println("Você ataca ou aguarda o inimigo atacar primeiro? 1- Atacar, 2- Aguardar");
		
		option = decision(2, in);
		
		OrcLeader leader = new OrcLeader();
		combat(player, leader, option == 1, in, difficultyLevel);

		System.out.println("Você conseguiu!");
		
		if (player.getMotivation() == Motivations.VENGEANCE) {
			System.out.println("Você obteve sua vingança.\n"
					+ "Você se ajoelha e cai no choro, invadido por uma sensação de alívio e felicidade.\n"
					+ "Você se vingou, tudo que sempre quis, está feito.\n" 
					+ "Agora você pode seguir sua vida.");
		} else {
			System.out.println("O êxtase em que você se encontra não cabe dentro de si.\n"
					+ "Você se ajoelha e grita de alegria.\n" 
					+ "A glória o aguarda, você a conquistou.");
		}
		
		System.out.println("Você se levanta, olha para os prisioneiros, vai de um em um e os liberta,\n"
				+ "e todos vocês saem em direção à noite, retornando à cidade.\n" 
				+ "Seu dever está cumprido.");
	}
	}

	private static int chooseOption(int numberOfOptions, Scanner in) throws IllegalArgumentException {
		String optionString = in.nextLine();
		int option = Integer.parseInt(optionString);
		if (option < 1 || option > numberOfOptions) {
			throw new IllegalArgumentException("Insira um número válido entre 1-" + numberOfOptions + ".");
		}
		return option;
	}
	
	private static int decision(int numberOfOptions, Scanner in) {
		boolean repeat = true;
		int option = 0;
		do {
			try {
				option = chooseOption(numberOfOptions, in);
				repeat = false;
			} catch (Exception exception) {
				System.err.println("Para escolher, digite apenas os números 1, 2 ou 3.");
			} 
		} while (repeat);
		
		return option;
	}

	private static void combat(CombatClass player, Enemy enemy, boolean playerAttacks, Scanner in, String difficultyLevel) {
		do {
			if (playerAttacks) {
				System.out.println("É a sua vez de atacar! Digite 1 para atacar ou 2 para fugir:");
				int option = decision(2, in);
				
				if (option == 2) {
					System.exit(0);
				}
				
				player.rollToAttack(enemy, difficultyLevel);
			} else {
				enemy.rollToAttack(player, difficultyLevel);
			}
			
			playerAttacks = !playerAttacks;
		} while (!player.dead() && !enemy.dead());
		
		if (player.dead()) {
			System.out.println("Você não estava preparado para a força do inimigo.");
			switch (player.getMotivation()) {
			case VENGEANCE:
				System.out.println(
						"Não foi possível concluir sua vingança, e agora resta saber se alguém se vingará por você.");
				break;
			case GLORY:
				if (player.getGender() == Gender.MALE) {
					System.out.println("A glória que buscavas não será sua, e a cidade aguarda por seu próximo herói.");
				} else {
					System.out.println("A glória que buscavas não será sua, e a cidade aguarda por sua próxima heroína.");
				}
				break;
			}
			System.exit(0);
		}
		
		if (enemy.dead()) {
			System.out.println("O inimigo não é páreo para o seu heroísmo, e jaz imóvel aos seus pés.");
		}
	}
}